# cloudbuild.yaml
# Pipeline de CI/CD para o MealIA no Google Cloud Platform

steps:
  # Passo 1: Build da imagem do Backend (FastAPI)
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', 
      '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/mealia-backend/backend:$BUILD_ID',
      '-t', 'us-central1-docker.pkg.dev/$PROJECT_ID/mealia-backend/backend:latest',
      './backend'
    ]

  # Passo 2: Push da imagem para Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '--all-tags', 'us-central1-docker.pkg.dev/$PROJECT_ID/mealia-backend/backend']

  # Passo 3: Deploy no Cloud Run (Otimizado para Free Tier)
  - name: 'gcr.io/cloud-builders/gcloud'
    args: [
      'run', 'deploy', 'mealia-backend',
      '--image', 'us-central1-docker.pkg.dev/$PROJECT_ID/mealia-backend/backend:$BUILD_ID',
      '--platform', 'managed',
      '--region', 'us-central1',
      '--allow-unauthenticated',
      '--port', '8000',
      '--memory', '256Mi',
      '--cpu', '0.5',
      '--min-instances', '0',
      '--max-instances', '3',
      '--set-env-vars', 'ENVIRONMENT=production'
    ]

  # Passo 4: Build do Frontend (React)
  - name: 'node:22'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cd frontend
        npm install
        npm run build
        echo "Frontend build concluído!"

  # Passo 5: Deploy no Firebase Hosting
  - name: 'node:22' # Usando Node.js 22, que é uma boa escolha
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Definir um diretório para instalação local de pacotes npm
        # Isso evita problemas com instalações globais e PATH
        mkdir -p /usr/local/bin/npm_modules
        export PATH="/usr/local/bin/npm_modules/bin:$PATH"
        
        # Instalar firebase-tools na pasta que acabamos de criar
        npm install firebase-tools@latest --prefix /usr/local/bin/npm_modules
        
        # Opcional: Verificar a versão do firebase-tools para depuração
        # Isso deve mostrar a versão mais recente, e não a 14.14.0
        firebase --version
        
        # Executar o deploy, agora com a certeza de usar a versão correta do firebase-tools
        firebase deploy --only hosting --project $PROJECT_ID --token "$$FIREBASE_TOKEN" --site meal-ai-development-c1604
    secretEnv: ['FIREBASE_TOKEN']

# Configurações do build (Otimizado para Free Tier)
options:
  machineType: 'E2_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY

timeout: '300s'

substitutions:
  _REGION: 'us-central1'

availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/firebase-token/versions/latest
    env: 'FIREBASE_TOKEN'